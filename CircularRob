// Combined with regularrob from leetcode
//
using namespace std;
class Solution {
    circularRob(vector<int>& nums) {
        if (nums.empty())
            return 0;
        if(nums.size() < 4)
        {
            sort(nums.begin(),nums.end());
            return nums.back();
        }
        vector<int> temp = nums;
        nums.pop_back;
        int firstPath = regularRob(nums);
        temp.erase(nums.begin())l;
        int secondPath = regularRob(temp);
        return max(firstPath,secondPath);
    }
};
//Regular house robber is also in this branch. Use that as the helper for the recursion.
